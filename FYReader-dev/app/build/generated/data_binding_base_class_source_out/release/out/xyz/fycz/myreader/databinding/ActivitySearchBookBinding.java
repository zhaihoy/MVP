// Generated by view binder compiler. Do not edit!
package xyz.fycz.myreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatRadioButton;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.scwang.smartrefresh.layout.SmartRefreshLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.fycz.myreader.R;
import zhy.hongyuan.widget.RefreshProgressBar;
import zhy.hongyuan.widget.TagGroup;

public final class ActivitySearchBookBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText etSearchKey;

  @NonNull
  public final FloatingActionButton fabSearchStop;

  @NonNull
  public final LinearLayout llBookcase;

  @NonNull
  public final LinearLayout llHistoryBooks;

  @NonNull
  public final LinearLayout llPreKeys;

  @NonNull
  public final LinearLayout llSuggestBook;

  @NonNull
  public final AppCompatRadioButton rbAllSearch;

  @NonNull
  public final AppCompatRadioButton rbFuzzySearch;

  @NonNull
  public final AppCompatRadioButton rbPreciseSearch;

  @NonNull
  public final RadioGroup rgSearchFilter;

  @NonNull
  public final RelativeLayout rlBookcaseBar;

  @NonNull
  public final RelativeLayout rlHistoryBar;

  @NonNull
  public final RelativeLayout rlSuggestBar;

  @NonNull
  public final RefreshProgressBar rpb;

  @NonNull
  public final RecyclerView rvSearchBooksList;

  @NonNull
  public final SmartRefreshLayout srlSearchBookList;

  @NonNull
  public final TagGroup tgBookcase;

  @NonNull
  public final TagGroup tgHistoryBooks;

  @NonNull
  public final TagGroup tgSuggestBook;

  @NonNull
  public final TextView tvClearHistory;

  @NonNull
  public final TextView tvFlattenBookcase;

  @NonNull
  public final TextView tvFlattenHistory;

  @NonNull
  public final TextView tvFlattenSuggest;

  @NonNull
  public final TextView tvSearchConform;

  private ActivitySearchBookBinding(@NonNull LinearLayout rootView, @NonNull EditText etSearchKey,
      @NonNull FloatingActionButton fabSearchStop, @NonNull LinearLayout llBookcase,
      @NonNull LinearLayout llHistoryBooks, @NonNull LinearLayout llPreKeys,
      @NonNull LinearLayout llSuggestBook, @NonNull AppCompatRadioButton rbAllSearch,
      @NonNull AppCompatRadioButton rbFuzzySearch, @NonNull AppCompatRadioButton rbPreciseSearch,
      @NonNull RadioGroup rgSearchFilter, @NonNull RelativeLayout rlBookcaseBar,
      @NonNull RelativeLayout rlHistoryBar, @NonNull RelativeLayout rlSuggestBar,
      @NonNull RefreshProgressBar rpb, @NonNull RecyclerView rvSearchBooksList,
      @NonNull SmartRefreshLayout srlSearchBookList, @NonNull TagGroup tgBookcase,
      @NonNull TagGroup tgHistoryBooks, @NonNull TagGroup tgSuggestBook,
      @NonNull TextView tvClearHistory, @NonNull TextView tvFlattenBookcase,
      @NonNull TextView tvFlattenHistory, @NonNull TextView tvFlattenSuggest,
      @NonNull TextView tvSearchConform) {
    this.rootView = rootView;
    this.etSearchKey = etSearchKey;
    this.fabSearchStop = fabSearchStop;
    this.llBookcase = llBookcase;
    this.llHistoryBooks = llHistoryBooks;
    this.llPreKeys = llPreKeys;
    this.llSuggestBook = llSuggestBook;
    this.rbAllSearch = rbAllSearch;
    this.rbFuzzySearch = rbFuzzySearch;
    this.rbPreciseSearch = rbPreciseSearch;
    this.rgSearchFilter = rgSearchFilter;
    this.rlBookcaseBar = rlBookcaseBar;
    this.rlHistoryBar = rlHistoryBar;
    this.rlSuggestBar = rlSuggestBar;
    this.rpb = rpb;
    this.rvSearchBooksList = rvSearchBooksList;
    this.srlSearchBookList = srlSearchBookList;
    this.tgBookcase = tgBookcase;
    this.tgHistoryBooks = tgHistoryBooks;
    this.tgSuggestBook = tgSuggestBook;
    this.tvClearHistory = tvClearHistory;
    this.tvFlattenBookcase = tvFlattenBookcase;
    this.tvFlattenHistory = tvFlattenHistory;
    this.tvFlattenSuggest = tvFlattenSuggest;
    this.tvSearchConform = tvSearchConform;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBookBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBookBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search_book, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBookBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.et_search_key;
      EditText etSearchKey = rootView.findViewById(id);
      if (etSearchKey == null) {
        break missingId;
      }

      id = R.id.fabSearchStop;
      FloatingActionButton fabSearchStop = rootView.findViewById(id);
      if (fabSearchStop == null) {
        break missingId;
      }

      id = R.id.ll_bookcase;
      LinearLayout llBookcase = rootView.findViewById(id);
      if (llBookcase == null) {
        break missingId;
      }

      id = R.id.ll_history_books;
      LinearLayout llHistoryBooks = rootView.findViewById(id);
      if (llHistoryBooks == null) {
        break missingId;
      }

      id = R.id.ll_pre_keys;
      LinearLayout llPreKeys = rootView.findViewById(id);
      if (llPreKeys == null) {
        break missingId;
      }

      id = R.id.ll_suggest_book;
      LinearLayout llSuggestBook = rootView.findViewById(id);
      if (llSuggestBook == null) {
        break missingId;
      }

      id = R.id.rb_all_search;
      AppCompatRadioButton rbAllSearch = rootView.findViewById(id);
      if (rbAllSearch == null) {
        break missingId;
      }

      id = R.id.rb_fuzzy_search;
      AppCompatRadioButton rbFuzzySearch = rootView.findViewById(id);
      if (rbFuzzySearch == null) {
        break missingId;
      }

      id = R.id.rb_precise_search;
      AppCompatRadioButton rbPreciseSearch = rootView.findViewById(id);
      if (rbPreciseSearch == null) {
        break missingId;
      }

      id = R.id.rg_search_filter;
      RadioGroup rgSearchFilter = rootView.findViewById(id);
      if (rgSearchFilter == null) {
        break missingId;
      }

      id = R.id.rl_bookcase_bar;
      RelativeLayout rlBookcaseBar = rootView.findViewById(id);
      if (rlBookcaseBar == null) {
        break missingId;
      }

      id = R.id.rl_history_bar;
      RelativeLayout rlHistoryBar = rootView.findViewById(id);
      if (rlHistoryBar == null) {
        break missingId;
      }

      id = R.id.rl_suggest_bar;
      RelativeLayout rlSuggestBar = rootView.findViewById(id);
      if (rlSuggestBar == null) {
        break missingId;
      }

      id = R.id.rpb;
      RefreshProgressBar rpb = rootView.findViewById(id);
      if (rpb == null) {
        break missingId;
      }

      id = R.id.rv_search_books_list;
      RecyclerView rvSearchBooksList = rootView.findViewById(id);
      if (rvSearchBooksList == null) {
        break missingId;
      }

      id = R.id.srl_search_book_list;
      SmartRefreshLayout srlSearchBookList = rootView.findViewById(id);
      if (srlSearchBookList == null) {
        break missingId;
      }

      id = R.id.tg_bookcase;
      TagGroup tgBookcase = rootView.findViewById(id);
      if (tgBookcase == null) {
        break missingId;
      }

      id = R.id.tg_history_books;
      TagGroup tgHistoryBooks = rootView.findViewById(id);
      if (tgHistoryBooks == null) {
        break missingId;
      }

      id = R.id.tg_suggest_book;
      TagGroup tgSuggestBook = rootView.findViewById(id);
      if (tgSuggestBook == null) {
        break missingId;
      }

      id = R.id.tv_clear_history;
      TextView tvClearHistory = rootView.findViewById(id);
      if (tvClearHistory == null) {
        break missingId;
      }

      id = R.id.tv_flatten_bookcase;
      TextView tvFlattenBookcase = rootView.findViewById(id);
      if (tvFlattenBookcase == null) {
        break missingId;
      }

      id = R.id.tv_flatten_history;
      TextView tvFlattenHistory = rootView.findViewById(id);
      if (tvFlattenHistory == null) {
        break missingId;
      }

      id = R.id.tv_flatten_suggest;
      TextView tvFlattenSuggest = rootView.findViewById(id);
      if (tvFlattenSuggest == null) {
        break missingId;
      }

      id = R.id.tv_search_conform;
      TextView tvSearchConform = rootView.findViewById(id);
      if (tvSearchConform == null) {
        break missingId;
      }

      return new ActivitySearchBookBinding((LinearLayout) rootView, etSearchKey, fabSearchStop,
          llBookcase, llHistoryBooks, llPreKeys, llSuggestBook, rbAllSearch, rbFuzzySearch,
          rbPreciseSearch, rgSearchFilter, rlBookcaseBar, rlHistoryBar, rlSuggestBar, rpb,
          rvSearchBooksList, srlSearchBookList, tgBookcase, tgHistoryBooks, tgSuggestBook,
          tvClearHistory, tvFlattenBookcase, tvFlattenHistory, tvFlattenSuggest, tvSearchConform);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
