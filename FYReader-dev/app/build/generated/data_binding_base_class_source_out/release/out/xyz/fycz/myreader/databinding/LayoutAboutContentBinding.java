// Generated by view binder compiler. Do not edit!
package xyz.fycz.myreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.fycz.myreader.R;

public final class LayoutAboutContentBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RelativeLayout rlContactAuthor;

  @NonNull
  public final RelativeLayout rlDisclaimer;

  @NonNull
  public final RelativeLayout rlGit;

  @NonNull
  public final RelativeLayout rlJoinQqChannel;

  @NonNull
  public final RelativeLayout rlLanZou;

  @NonNull
  public final RelativeLayout rlOfficialWeb;

  @NonNull
  public final RelativeLayout rlPlugin;

  @NonNull
  public final RelativeLayout rlPrivacyPolicy;

  @NonNull
  public final RelativeLayout rlQq;

  @NonNull
  public final RelativeLayout rlResetPangle;

  @NonNull
  public final RelativeLayout rlShare;

  @NonNull
  public final RelativeLayout rlShareLog;

  @NonNull
  public final RelativeLayout rlUpdate;

  @NonNull
  public final RelativeLayout rlUpdateLog;

  @NonNull
  public final TextView tvPlugin;

  @NonNull
  public final TextView tvVersionName;

  private LayoutAboutContentBinding(@NonNull NestedScrollView rootView,
      @NonNull RelativeLayout rlContactAuthor, @NonNull RelativeLayout rlDisclaimer,
      @NonNull RelativeLayout rlGit, @NonNull RelativeLayout rlJoinQqChannel,
      @NonNull RelativeLayout rlLanZou, @NonNull RelativeLayout rlOfficialWeb,
      @NonNull RelativeLayout rlPlugin, @NonNull RelativeLayout rlPrivacyPolicy,
      @NonNull RelativeLayout rlQq, @NonNull RelativeLayout rlResetPangle,
      @NonNull RelativeLayout rlShare, @NonNull RelativeLayout rlShareLog,
      @NonNull RelativeLayout rlUpdate, @NonNull RelativeLayout rlUpdateLog,
      @NonNull TextView tvPlugin, @NonNull TextView tvVersionName) {
    this.rootView = rootView;
    this.rlContactAuthor = rlContactAuthor;
    this.rlDisclaimer = rlDisclaimer;
    this.rlGit = rlGit;
    this.rlJoinQqChannel = rlJoinQqChannel;
    this.rlLanZou = rlLanZou;
    this.rlOfficialWeb = rlOfficialWeb;
    this.rlPlugin = rlPlugin;
    this.rlPrivacyPolicy = rlPrivacyPolicy;
    this.rlQq = rlQq;
    this.rlResetPangle = rlResetPangle;
    this.rlShare = rlShare;
    this.rlShareLog = rlShareLog;
    this.rlUpdate = rlUpdate;
    this.rlUpdateLog = rlUpdateLog;
    this.tvPlugin = tvPlugin;
    this.tvVersionName = tvVersionName;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutAboutContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutAboutContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_about_content, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutAboutContentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.rl_contact_author;
      RelativeLayout rlContactAuthor = rootView.findViewById(id);
      if (rlContactAuthor == null) {
        break missingId;
      }

      id = R.id.rl_disclaimer;
      RelativeLayout rlDisclaimer = rootView.findViewById(id);
      if (rlDisclaimer == null) {
        break missingId;
      }

      id = R.id.rl_git;
      RelativeLayout rlGit = rootView.findViewById(id);
      if (rlGit == null) {
        break missingId;
      }

      id = R.id.rl_join_qq_channel;
      RelativeLayout rlJoinQqChannel = rootView.findViewById(id);
      if (rlJoinQqChannel == null) {
        break missingId;
      }

      id = R.id.rl_lan_zou;
      RelativeLayout rlLanZou = rootView.findViewById(id);
      if (rlLanZou == null) {
        break missingId;
      }

      id = R.id.rl_official_web;
      RelativeLayout rlOfficialWeb = rootView.findViewById(id);
      if (rlOfficialWeb == null) {
        break missingId;
      }

      id = R.id.rl_plugin;
      RelativeLayout rlPlugin = rootView.findViewById(id);
      if (rlPlugin == null) {
        break missingId;
      }

      id = R.id.rl_privacy_policy;
      RelativeLayout rlPrivacyPolicy = rootView.findViewById(id);
      if (rlPrivacyPolicy == null) {
        break missingId;
      }

      id = R.id.rl_qq;
      RelativeLayout rlQq = rootView.findViewById(id);
      if (rlQq == null) {
        break missingId;
      }

      id = R.id.rl_reset_pangle;
      RelativeLayout rlResetPangle = rootView.findViewById(id);
      if (rlResetPangle == null) {
        break missingId;
      }

      id = R.id.rl_share;
      RelativeLayout rlShare = rootView.findViewById(id);
      if (rlShare == null) {
        break missingId;
      }

      id = R.id.rl_share_log;
      RelativeLayout rlShareLog = rootView.findViewById(id);
      if (rlShareLog == null) {
        break missingId;
      }

      id = R.id.rl_update;
      RelativeLayout rlUpdate = rootView.findViewById(id);
      if (rlUpdate == null) {
        break missingId;
      }

      id = R.id.rl_update_log;
      RelativeLayout rlUpdateLog = rootView.findViewById(id);
      if (rlUpdateLog == null) {
        break missingId;
      }

      id = R.id.tv_plugin;
      TextView tvPlugin = rootView.findViewById(id);
      if (tvPlugin == null) {
        break missingId;
      }

      id = R.id.tv_version_name;
      TextView tvVersionName = rootView.findViewById(id);
      if (tvVersionName == null) {
        break missingId;
      }

      return new LayoutAboutContentBinding((NestedScrollView) rootView, rlContactAuthor,
          rlDisclaimer, rlGit, rlJoinQqChannel, rlLanZou, rlOfficialWeb, rlPlugin, rlPrivacyPolicy,
          rlQq, rlResetPangle, rlShare, rlShareLog, rlUpdate, rlUpdateLog, tvPlugin, tvVersionName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
