// Generated by view binder compiler. Do not edit!
package xyz.fycz.myreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.fycz.myreader.R;

public final class FragmentWebdavSettingBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llRestoreNum;

  @NonNull
  public final LinearLayout llRestoreSort;

  @NonNull
  public final TextView tvRestoreNum;

  @NonNull
  public final TextView tvRestoreSort;

  @NonNull
  public final TextView tvWebdavAccount;

  @NonNull
  public final TextView tvWebdavPassword;

  @NonNull
  public final TextView tvWebdavUrl;

  @NonNull
  public final LinearLayout webdavSettingWebdavAccount;

  @NonNull
  public final LinearLayout webdavSettingWebdavPassword;

  @NonNull
  public final LinearLayout webdavSettingWebdavRestore;

  @NonNull
  public final LinearLayout webdavSettingWebdavUrl;

  private FragmentWebdavSettingBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout llRestoreNum, @NonNull LinearLayout llRestoreSort,
      @NonNull TextView tvRestoreNum, @NonNull TextView tvRestoreSort,
      @NonNull TextView tvWebdavAccount, @NonNull TextView tvWebdavPassword,
      @NonNull TextView tvWebdavUrl, @NonNull LinearLayout webdavSettingWebdavAccount,
      @NonNull LinearLayout webdavSettingWebdavPassword,
      @NonNull LinearLayout webdavSettingWebdavRestore,
      @NonNull LinearLayout webdavSettingWebdavUrl) {
    this.rootView = rootView;
    this.llRestoreNum = llRestoreNum;
    this.llRestoreSort = llRestoreSort;
    this.tvRestoreNum = tvRestoreNum;
    this.tvRestoreSort = tvRestoreSort;
    this.tvWebdavAccount = tvWebdavAccount;
    this.tvWebdavPassword = tvWebdavPassword;
    this.tvWebdavUrl = tvWebdavUrl;
    this.webdavSettingWebdavAccount = webdavSettingWebdavAccount;
    this.webdavSettingWebdavPassword = webdavSettingWebdavPassword;
    this.webdavSettingWebdavRestore = webdavSettingWebdavRestore;
    this.webdavSettingWebdavUrl = webdavSettingWebdavUrl;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentWebdavSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentWebdavSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_webdav_setting, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentWebdavSettingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll_restore_num;
      LinearLayout llRestoreNum = rootView.findViewById(id);
      if (llRestoreNum == null) {
        break missingId;
      }

      id = R.id.ll_restore_sort;
      LinearLayout llRestoreSort = rootView.findViewById(id);
      if (llRestoreSort == null) {
        break missingId;
      }

      id = R.id.tv_restore_num;
      TextView tvRestoreNum = rootView.findViewById(id);
      if (tvRestoreNum == null) {
        break missingId;
      }

      id = R.id.tv_restore_sort;
      TextView tvRestoreSort = rootView.findViewById(id);
      if (tvRestoreSort == null) {
        break missingId;
      }

      id = R.id.tv_webdav_account;
      TextView tvWebdavAccount = rootView.findViewById(id);
      if (tvWebdavAccount == null) {
        break missingId;
      }

      id = R.id.tv_webdav_password;
      TextView tvWebdavPassword = rootView.findViewById(id);
      if (tvWebdavPassword == null) {
        break missingId;
      }

      id = R.id.tv_webdav_url;
      TextView tvWebdavUrl = rootView.findViewById(id);
      if (tvWebdavUrl == null) {
        break missingId;
      }

      id = R.id.webdav_setting_webdav_account;
      LinearLayout webdavSettingWebdavAccount = rootView.findViewById(id);
      if (webdavSettingWebdavAccount == null) {
        break missingId;
      }

      id = R.id.webdav_setting_webdav_password;
      LinearLayout webdavSettingWebdavPassword = rootView.findViewById(id);
      if (webdavSettingWebdavPassword == null) {
        break missingId;
      }

      id = R.id.webdav_setting_webdav_restore;
      LinearLayout webdavSettingWebdavRestore = rootView.findViewById(id);
      if (webdavSettingWebdavRestore == null) {
        break missingId;
      }

      id = R.id.webdav_setting_webdav_url;
      LinearLayout webdavSettingWebdavUrl = rootView.findViewById(id);
      if (webdavSettingWebdavUrl == null) {
        break missingId;
      }

      return new FragmentWebdavSettingBinding((LinearLayout) rootView, llRestoreNum, llRestoreSort,
          tvRestoreNum, tvRestoreSort, tvWebdavAccount, tvWebdavPassword, tvWebdavUrl,
          webdavSettingWebdavAccount, webdavSettingWebdavPassword, webdavSettingWebdavRestore,
          webdavSettingWebdavUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
