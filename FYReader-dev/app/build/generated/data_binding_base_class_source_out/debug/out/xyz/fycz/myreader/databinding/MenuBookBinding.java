// Generated by view binder compiler. Do not edit!
package xyz.fycz.myreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.fycz.myreader.R;
import zhy.hongyuan.widget.CoverImageView;
import zhy.hongyuan.widget.SwitchButton;

public final class MenuBookBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CoverImageView ivBookImg;

  @NonNull
  public final LinearLayout llBookItem;

  @NonNull
  public final LinearLayout llBookRead;

  @NonNull
  public final RelativeLayout rlBookDetail;

  @NonNull
  public final SwitchButton sbIsUpdate;

  @NonNull
  public final TextView tvBookAuthor;

  @NonNull
  public final TextView tvBookName;

  @NonNull
  public final TextView tvChangeSource;

  @NonNull
  public final TextView tvDownload;

  @NonNull
  public final TextView tvEdit;

  @NonNull
  public final TextView tvEditSource;

  @NonNull
  public final TextView tvExportCathe;

  @NonNull
  public final TextView tvLink;

  @NonNull
  public final TextView tvRefresh;

  @NonNull
  public final TextView tvRemove;

  @NonNull
  public final TextView tvSetGroup;

  @NonNull
  public final TextView tvShare;

  @NonNull
  public final TextView tvThemeModeSelect;

  @NonNull
  public final TextView tvTop;

  private MenuBookBinding(@NonNull LinearLayout rootView, @NonNull CoverImageView ivBookImg,
      @NonNull LinearLayout llBookItem, @NonNull LinearLayout llBookRead,
      @NonNull RelativeLayout rlBookDetail, @NonNull SwitchButton sbIsUpdate,
      @NonNull TextView tvBookAuthor, @NonNull TextView tvBookName,
      @NonNull TextView tvChangeSource, @NonNull TextView tvDownload, @NonNull TextView tvEdit,
      @NonNull TextView tvEditSource, @NonNull TextView tvExportCathe, @NonNull TextView tvLink,
      @NonNull TextView tvRefresh, @NonNull TextView tvRemove, @NonNull TextView tvSetGroup,
      @NonNull TextView tvShare, @NonNull TextView tvThemeModeSelect, @NonNull TextView tvTop) {
    this.rootView = rootView;
    this.ivBookImg = ivBookImg;
    this.llBookItem = llBookItem;
    this.llBookRead = llBookRead;
    this.rlBookDetail = rlBookDetail;
    this.sbIsUpdate = sbIsUpdate;
    this.tvBookAuthor = tvBookAuthor;
    this.tvBookName = tvBookName;
    this.tvChangeSource = tvChangeSource;
    this.tvDownload = tvDownload;
    this.tvEdit = tvEdit;
    this.tvEditSource = tvEditSource;
    this.tvExportCathe = tvExportCathe;
    this.tvLink = tvLink;
    this.tvRefresh = tvRefresh;
    this.tvRemove = tvRemove;
    this.tvSetGroup = tvSetGroup;
    this.tvShare = tvShare;
    this.tvThemeModeSelect = tvThemeModeSelect;
    this.tvTop = tvTop;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MenuBookBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MenuBookBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.menu_book, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MenuBookBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_book_img;
      CoverImageView ivBookImg = rootView.findViewById(id);
      if (ivBookImg == null) {
        break missingId;
      }

      id = R.id.ll_book_item;
      LinearLayout llBookItem = rootView.findViewById(id);
      if (llBookItem == null) {
        break missingId;
      }

      id = R.id.ll_book_read;
      LinearLayout llBookRead = rootView.findViewById(id);
      if (llBookRead == null) {
        break missingId;
      }

      id = R.id.rl_book_detail;
      RelativeLayout rlBookDetail = rootView.findViewById(id);
      if (rlBookDetail == null) {
        break missingId;
      }

      id = R.id.sb_is_update;
      SwitchButton sbIsUpdate = rootView.findViewById(id);
      if (sbIsUpdate == null) {
        break missingId;
      }

      id = R.id.tv_book_author;
      TextView tvBookAuthor = rootView.findViewById(id);
      if (tvBookAuthor == null) {
        break missingId;
      }

      id = R.id.tv_book_name;
      TextView tvBookName = rootView.findViewById(id);
      if (tvBookName == null) {
        break missingId;
      }

      id = R.id.tv_change_source;
      TextView tvChangeSource = rootView.findViewById(id);
      if (tvChangeSource == null) {
        break missingId;
      }

      id = R.id.tv_download;
      TextView tvDownload = rootView.findViewById(id);
      if (tvDownload == null) {
        break missingId;
      }

      id = R.id.tv_edit;
      TextView tvEdit = rootView.findViewById(id);
      if (tvEdit == null) {
        break missingId;
      }

      id = R.id.tv_edit_source;
      TextView tvEditSource = rootView.findViewById(id);
      if (tvEditSource == null) {
        break missingId;
      }

      id = R.id.tv_export_cathe;
      TextView tvExportCathe = rootView.findViewById(id);
      if (tvExportCathe == null) {
        break missingId;
      }

      id = R.id.tv_link;
      TextView tvLink = rootView.findViewById(id);
      if (tvLink == null) {
        break missingId;
      }

      id = R.id.tv_refresh;
      TextView tvRefresh = rootView.findViewById(id);
      if (tvRefresh == null) {
        break missingId;
      }

      id = R.id.tv_remove;
      TextView tvRemove = rootView.findViewById(id);
      if (tvRemove == null) {
        break missingId;
      }

      id = R.id.tv_set_group;
      TextView tvSetGroup = rootView.findViewById(id);
      if (tvSetGroup == null) {
        break missingId;
      }

      id = R.id.tv_share;
      TextView tvShare = rootView.findViewById(id);
      if (tvShare == null) {
        break missingId;
      }

      id = R.id.tv_theme_mode_select;
      TextView tvThemeModeSelect = rootView.findViewById(id);
      if (tvThemeModeSelect == null) {
        break missingId;
      }

      id = R.id.tv_top;
      TextView tvTop = rootView.findViewById(id);
      if (tvTop == null) {
        break missingId;
      }

      return new MenuBookBinding((LinearLayout) rootView, ivBookImg, llBookItem, llBookRead,
          rlBookDetail, sbIsUpdate, tvBookAuthor, tvBookName, tvChangeSource, tvDownload, tvEdit,
          tvEditSource, tvExportCathe, tvLink, tvRefresh, tvRemove, tvSetGroup, tvShare,
          tvThemeModeSelect, tvTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
