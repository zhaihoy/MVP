// Generated by view binder compiler. Do not edit!
package xyz.fycz.myreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.fycz.myreader.R;

public final class FragmentPrivateBookcaseBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout llContent;

  @NonNull
  public final LinearLayout llHideBooks;

  @NonNull
  public final RelativeLayout rlChangePwd;

  @NonNull
  public final RelativeLayout rlFingerprint;

  @NonNull
  public final RelativeLayout rlPrivateBookcase;

  @NonNull
  public final SwitchCompat scFingerprint;

  @NonNull
  public final SwitchCompat scPrivateBookcase;

  private FragmentPrivateBookcaseBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout llContent, @NonNull LinearLayout llHideBooks,
      @NonNull RelativeLayout rlChangePwd, @NonNull RelativeLayout rlFingerprint,
      @NonNull RelativeLayout rlPrivateBookcase, @NonNull SwitchCompat scFingerprint,
      @NonNull SwitchCompat scPrivateBookcase) {
    this.rootView = rootView;
    this.llContent = llContent;
    this.llHideBooks = llHideBooks;
    this.rlChangePwd = rlChangePwd;
    this.rlFingerprint = rlFingerprint;
    this.rlPrivateBookcase = rlPrivateBookcase;
    this.scFingerprint = scFingerprint;
    this.scPrivateBookcase = scPrivateBookcase;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPrivateBookcaseBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPrivateBookcaseBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_private_bookcase, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPrivateBookcaseBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ll_content;
      LinearLayout llContent = rootView.findViewById(id);
      if (llContent == null) {
        break missingId;
      }

      id = R.id.ll_hide_books;
      LinearLayout llHideBooks = rootView.findViewById(id);
      if (llHideBooks == null) {
        break missingId;
      }

      id = R.id.rl_change_pwd;
      RelativeLayout rlChangePwd = rootView.findViewById(id);
      if (rlChangePwd == null) {
        break missingId;
      }

      id = R.id.rl_fingerprint;
      RelativeLayout rlFingerprint = rootView.findViewById(id);
      if (rlFingerprint == null) {
        break missingId;
      }

      id = R.id.rl_private_bookcase;
      RelativeLayout rlPrivateBookcase = rootView.findViewById(id);
      if (rlPrivateBookcase == null) {
        break missingId;
      }

      id = R.id.sc_fingerprint;
      SwitchCompat scFingerprint = rootView.findViewById(id);
      if (scFingerprint == null) {
        break missingId;
      }

      id = R.id.sc_private_bookcase;
      SwitchCompat scPrivateBookcase = rootView.findViewById(id);
      if (scPrivateBookcase == null) {
        break missingId;
      }

      return new FragmentPrivateBookcaseBinding((LinearLayout) rootView, llContent, llHideBooks,
          rlChangePwd, rlFingerprint, rlPrivateBookcase, scFingerprint, scPrivateBookcase);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
