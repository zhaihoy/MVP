// Generated by view binder compiler. Do not edit!
package xyz.fycz.myreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.SearchView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.fycz.myreader.R;
import zhy.hongyuan.widget.RefreshProgressBar;

public final class DialogBookSourceBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RecyclerView dialogRvContent;

  @NonNull
  public final ToolbarBinding it;

  @NonNull
  public final AppCompatImageView ivRefreshSearch;

  @NonNull
  public final AppCompatImageView ivStopSearch;

  @NonNull
  public final RefreshProgressBar rpb;

  @NonNull
  public final SearchView searchView;

  private DialogBookSourceBinding(@NonNull LinearLayout rootView,
      @NonNull RecyclerView dialogRvContent, @NonNull ToolbarBinding it,
      @NonNull AppCompatImageView ivRefreshSearch, @NonNull AppCompatImageView ivStopSearch,
      @NonNull RefreshProgressBar rpb, @NonNull SearchView searchView) {
    this.rootView = rootView;
    this.dialogRvContent = dialogRvContent;
    this.it = it;
    this.ivRefreshSearch = ivRefreshSearch;
    this.ivStopSearch = ivStopSearch;
    this.rpb = rpb;
    this.searchView = searchView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogBookSourceBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogBookSourceBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_book_source, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogBookSourceBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialog_rv_content;
      RecyclerView dialogRvContent = rootView.findViewById(id);
      if (dialogRvContent == null) {
        break missingId;
      }

      id = R.id.it;
      View it = rootView.findViewById(id);
      if (it == null) {
        break missingId;
      }
      ToolbarBinding binding_it = ToolbarBinding.bind(it);

      id = R.id.iv_refresh_search;
      AppCompatImageView ivRefreshSearch = rootView.findViewById(id);
      if (ivRefreshSearch == null) {
        break missingId;
      }

      id = R.id.iv_stop_search;
      AppCompatImageView ivStopSearch = rootView.findViewById(id);
      if (ivStopSearch == null) {
        break missingId;
      }

      id = R.id.rpb;
      RefreshProgressBar rpb = rootView.findViewById(id);
      if (rpb == null) {
        break missingId;
      }

      id = R.id.searchView;
      SearchView searchView = rootView.findViewById(id);
      if (searchView == null) {
        break missingId;
      }

      return new DialogBookSourceBinding((LinearLayout) rootView, dialogRvContent, binding_it,
          ivRefreshSearch, ivStopSearch, rpb, searchView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
