// Generated by view binder compiler. Do not edit!
package xyz.fycz.myreader.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.SeekBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import xyz.fycz.myreader.R;

public final class MenuCustomizeComBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final AppCompatImageView ivBottomAdd;

  @NonNull
  public final AppCompatImageView ivBottomMinus;

  @NonNull
  public final AppCompatImageView ivLeftAdd;

  @NonNull
  public final AppCompatImageView ivLeftMinus;

  @NonNull
  public final AppCompatImageView ivLineAdd;

  @NonNull
  public final AppCompatImageView ivLineMinus;

  @NonNull
  public final AppCompatImageView ivParaAdd;

  @NonNull
  public final AppCompatImageView ivParaMinus;

  @NonNull
  public final AppCompatImageView ivRightAdd;

  @NonNull
  public final AppCompatImageView ivRightMinus;

  @NonNull
  public final AppCompatImageView ivTextAdd;

  @NonNull
  public final AppCompatImageView ivTextMinus;

  @NonNull
  public final AppCompatImageView ivTopAdd;

  @NonNull
  public final AppCompatImageView ivTopMinus;

  @NonNull
  public final SeekBar sbBottomProgress;

  @NonNull
  public final SeekBar sbLeftProgress;

  @NonNull
  public final SeekBar sbLineProgress;

  @NonNull
  public final SeekBar sbParaProgress;

  @NonNull
  public final SeekBar sbRightProgress;

  @NonNull
  public final SeekBar sbTextProgress;

  @NonNull
  public final SeekBar sbTopProgress;

  @NonNull
  public final TextView tvBottomSpacing;

  @NonNull
  public final TextView tvLeftSpacing;

  @NonNull
  public final TextView tvLineSpacing;

  @NonNull
  public final TextView tvNormalCom;

  @NonNull
  public final TextView tvParaSpacing;

  @NonNull
  public final TextView tvReset;

  @NonNull
  public final TextView tvRightSpacing;

  @NonNull
  public final TextView tvTextSpacing;

  @NonNull
  public final TextView tvTightCom;

  @NonNull
  public final TextView tvTopSpacing;

  @NonNull
  public final View vwNavigationBar;

  private MenuCustomizeComBinding(@NonNull LinearLayout rootView,
      @NonNull AppCompatImageView ivBottomAdd, @NonNull AppCompatImageView ivBottomMinus,
      @NonNull AppCompatImageView ivLeftAdd, @NonNull AppCompatImageView ivLeftMinus,
      @NonNull AppCompatImageView ivLineAdd, @NonNull AppCompatImageView ivLineMinus,
      @NonNull AppCompatImageView ivParaAdd, @NonNull AppCompatImageView ivParaMinus,
      @NonNull AppCompatImageView ivRightAdd, @NonNull AppCompatImageView ivRightMinus,
      @NonNull AppCompatImageView ivTextAdd, @NonNull AppCompatImageView ivTextMinus,
      @NonNull AppCompatImageView ivTopAdd, @NonNull AppCompatImageView ivTopMinus,
      @NonNull SeekBar sbBottomProgress, @NonNull SeekBar sbLeftProgress,
      @NonNull SeekBar sbLineProgress, @NonNull SeekBar sbParaProgress,
      @NonNull SeekBar sbRightProgress, @NonNull SeekBar sbTextProgress,
      @NonNull SeekBar sbTopProgress, @NonNull TextView tvBottomSpacing,
      @NonNull TextView tvLeftSpacing, @NonNull TextView tvLineSpacing,
      @NonNull TextView tvNormalCom, @NonNull TextView tvParaSpacing, @NonNull TextView tvReset,
      @NonNull TextView tvRightSpacing, @NonNull TextView tvTextSpacing,
      @NonNull TextView tvTightCom, @NonNull TextView tvTopSpacing, @NonNull View vwNavigationBar) {
    this.rootView = rootView;
    this.ivBottomAdd = ivBottomAdd;
    this.ivBottomMinus = ivBottomMinus;
    this.ivLeftAdd = ivLeftAdd;
    this.ivLeftMinus = ivLeftMinus;
    this.ivLineAdd = ivLineAdd;
    this.ivLineMinus = ivLineMinus;
    this.ivParaAdd = ivParaAdd;
    this.ivParaMinus = ivParaMinus;
    this.ivRightAdd = ivRightAdd;
    this.ivRightMinus = ivRightMinus;
    this.ivTextAdd = ivTextAdd;
    this.ivTextMinus = ivTextMinus;
    this.ivTopAdd = ivTopAdd;
    this.ivTopMinus = ivTopMinus;
    this.sbBottomProgress = sbBottomProgress;
    this.sbLeftProgress = sbLeftProgress;
    this.sbLineProgress = sbLineProgress;
    this.sbParaProgress = sbParaProgress;
    this.sbRightProgress = sbRightProgress;
    this.sbTextProgress = sbTextProgress;
    this.sbTopProgress = sbTopProgress;
    this.tvBottomSpacing = tvBottomSpacing;
    this.tvLeftSpacing = tvLeftSpacing;
    this.tvLineSpacing = tvLineSpacing;
    this.tvNormalCom = tvNormalCom;
    this.tvParaSpacing = tvParaSpacing;
    this.tvReset = tvReset;
    this.tvRightSpacing = tvRightSpacing;
    this.tvTextSpacing = tvTextSpacing;
    this.tvTightCom = tvTightCom;
    this.tvTopSpacing = tvTopSpacing;
    this.vwNavigationBar = vwNavigationBar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MenuCustomizeComBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MenuCustomizeComBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.menu_customize_com, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MenuCustomizeComBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_bottom_add;
      AppCompatImageView ivBottomAdd = rootView.findViewById(id);
      if (ivBottomAdd == null) {
        break missingId;
      }

      id = R.id.iv_bottom_minus;
      AppCompatImageView ivBottomMinus = rootView.findViewById(id);
      if (ivBottomMinus == null) {
        break missingId;
      }

      id = R.id.iv_left_add;
      AppCompatImageView ivLeftAdd = rootView.findViewById(id);
      if (ivLeftAdd == null) {
        break missingId;
      }

      id = R.id.iv_left_minus;
      AppCompatImageView ivLeftMinus = rootView.findViewById(id);
      if (ivLeftMinus == null) {
        break missingId;
      }

      id = R.id.iv_line_add;
      AppCompatImageView ivLineAdd = rootView.findViewById(id);
      if (ivLineAdd == null) {
        break missingId;
      }

      id = R.id.iv_line_minus;
      AppCompatImageView ivLineMinus = rootView.findViewById(id);
      if (ivLineMinus == null) {
        break missingId;
      }

      id = R.id.iv_para_add;
      AppCompatImageView ivParaAdd = rootView.findViewById(id);
      if (ivParaAdd == null) {
        break missingId;
      }

      id = R.id.iv_para_minus;
      AppCompatImageView ivParaMinus = rootView.findViewById(id);
      if (ivParaMinus == null) {
        break missingId;
      }

      id = R.id.iv_right_add;
      AppCompatImageView ivRightAdd = rootView.findViewById(id);
      if (ivRightAdd == null) {
        break missingId;
      }

      id = R.id.iv_right_minus;
      AppCompatImageView ivRightMinus = rootView.findViewById(id);
      if (ivRightMinus == null) {
        break missingId;
      }

      id = R.id.iv_text_add;
      AppCompatImageView ivTextAdd = rootView.findViewById(id);
      if (ivTextAdd == null) {
        break missingId;
      }

      id = R.id.iv_text_minus;
      AppCompatImageView ivTextMinus = rootView.findViewById(id);
      if (ivTextMinus == null) {
        break missingId;
      }

      id = R.id.iv_top_add;
      AppCompatImageView ivTopAdd = rootView.findViewById(id);
      if (ivTopAdd == null) {
        break missingId;
      }

      id = R.id.iv_top_minus;
      AppCompatImageView ivTopMinus = rootView.findViewById(id);
      if (ivTopMinus == null) {
        break missingId;
      }

      id = R.id.sb_bottom_progress;
      SeekBar sbBottomProgress = rootView.findViewById(id);
      if (sbBottomProgress == null) {
        break missingId;
      }

      id = R.id.sb_left_progress;
      SeekBar sbLeftProgress = rootView.findViewById(id);
      if (sbLeftProgress == null) {
        break missingId;
      }

      id = R.id.sb_line_progress;
      SeekBar sbLineProgress = rootView.findViewById(id);
      if (sbLineProgress == null) {
        break missingId;
      }

      id = R.id.sb_para_progress;
      SeekBar sbParaProgress = rootView.findViewById(id);
      if (sbParaProgress == null) {
        break missingId;
      }

      id = R.id.sb_right_progress;
      SeekBar sbRightProgress = rootView.findViewById(id);
      if (sbRightProgress == null) {
        break missingId;
      }

      id = R.id.sb_text_progress;
      SeekBar sbTextProgress = rootView.findViewById(id);
      if (sbTextProgress == null) {
        break missingId;
      }

      id = R.id.sb_top_progress;
      SeekBar sbTopProgress = rootView.findViewById(id);
      if (sbTopProgress == null) {
        break missingId;
      }

      id = R.id.tv_bottom_spacing;
      TextView tvBottomSpacing = rootView.findViewById(id);
      if (tvBottomSpacing == null) {
        break missingId;
      }

      id = R.id.tv_left_spacing;
      TextView tvLeftSpacing = rootView.findViewById(id);
      if (tvLeftSpacing == null) {
        break missingId;
      }

      id = R.id.tv_line_spacing;
      TextView tvLineSpacing = rootView.findViewById(id);
      if (tvLineSpacing == null) {
        break missingId;
      }

      id = R.id.tv_normal_com;
      TextView tvNormalCom = rootView.findViewById(id);
      if (tvNormalCom == null) {
        break missingId;
      }

      id = R.id.tv_para_spacing;
      TextView tvParaSpacing = rootView.findViewById(id);
      if (tvParaSpacing == null) {
        break missingId;
      }

      id = R.id.tv_reset;
      TextView tvReset = rootView.findViewById(id);
      if (tvReset == null) {
        break missingId;
      }

      id = R.id.tv_right_spacing;
      TextView tvRightSpacing = rootView.findViewById(id);
      if (tvRightSpacing == null) {
        break missingId;
      }

      id = R.id.tv_text_spacing;
      TextView tvTextSpacing = rootView.findViewById(id);
      if (tvTextSpacing == null) {
        break missingId;
      }

      id = R.id.tv_tight_com;
      TextView tvTightCom = rootView.findViewById(id);
      if (tvTightCom == null) {
        break missingId;
      }

      id = R.id.tv_top_spacing;
      TextView tvTopSpacing = rootView.findViewById(id);
      if (tvTopSpacing == null) {
        break missingId;
      }

      id = R.id.vwNavigationBar;
      View vwNavigationBar = rootView.findViewById(id);
      if (vwNavigationBar == null) {
        break missingId;
      }

      return new MenuCustomizeComBinding((LinearLayout) rootView, ivBottomAdd, ivBottomMinus,
          ivLeftAdd, ivLeftMinus, ivLineAdd, ivLineMinus, ivParaAdd, ivParaMinus, ivRightAdd,
          ivRightMinus, ivTextAdd, ivTextMinus, ivTopAdd, ivTopMinus, sbBottomProgress,
          sbLeftProgress, sbLineProgress, sbParaProgress, sbRightProgress, sbTextProgress,
          sbTopProgress, tvBottomSpacing, tvLeftSpacing, tvLineSpacing, tvNormalCom, tvParaSpacing,
          tvReset, tvRightSpacing, tvTextSpacing, tvTightCom, tvTopSpacing, vwNavigationBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
